{"version":3,"sources":["img/factsolotl.png","containers/search/search.js","store/actions.js","containers/results/results.js","App.js","serviceWorker.js","store/temp-data.js","store/reducer.js","index.js"],"names":["module","exports","Search","event","preventDefault","this","props","onEnterZip","className","onSubmit","submitZip","type","placeholder","id","ref","input","county","school","zip","React","Component","connect","state","Pb","resultPb","dispatch","target","value","Results","App","appBody","href","src","factsolotl","alt","Boolean","window","location","hostname","match","pws","initialState","reducer","action","error","data","ccr","analytes","lead","avgConc","units","i","length","z","console","log","store","createStore","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1878104a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/factsolotl.a8e53800.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport \"./search.css\";\n\nclass Search extends React.Component {\n  submitZip(event) {\n    event.preventDefault();\n    this.props.onEnterZip(event);\n  }\n\n  render() {\n   \n      return (\n        <div className=\"container\">\n          <form onSubmit={event => this.submitZip(event)}>\n            <input\n              type=\"text\"\n              placeholder=\"county\"\n              id=\"county\"\n              ref={input => {\n                this.county = input;\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"school name\"\n              id=\"school\"\n              ref={input => {\n                this.school = input;\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"zip\"\n              id=\"zip\"\n              ref={input => {\n                this.zip = input;\n              }}\n            />\n            <button\n              className=\"btn-floating btn-small waves-effect waves-light red lighten-1\"\n              type=\"submit\"\n            >\n              <i className=\"large material-icons prefix\">search</i>\n            </button>\n          </form>\n          <p>\n            Enter your zip code to see contaminant info for your tap water. For\n            demo purposes the zip code is 00000.\n          </p>\n        </div>\n      );\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Pb: state.resultPb\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onEnterZip: event =>\n      dispatch({\n        type: actionTypes.SUBMIT_ZIP,\n        zip: event.target.zip.value\n      })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","export const SUBMIT_ZIP = 'SUBMIT_ZIP'","import React from \"react\";\nimport {connect} from 'react-redux';\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>County</h1>\n        <div className=\"School\">\n          <p>School:</p>\n        </div>\n        \n        <div className=\"Pb\">\n          Lead: {this.props.Pb}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      Pb: state.resultPb,\n  }\n}\n\nexport default connect(mapStateToProps)(Results);","\nimport React from 'react';\nimport './App.css';\nimport Search from './containers/search/search';\nimport Results from './containers/results/results';\nimport factsolotl from './img/factsolotl.png';\nimport { connect } from \"react-redux\";\n\n\n\nclass App extends React.Component {\n\n  render(){\n    const appBody = \n  <div className=\"App\">\n  <div className=\"sliding-background\"></div>\n   <a href=\"https://www.scientificamerican.com/article/biologys-beloved-amphibian-the-axolotl-is-racing-toward-extinction1/\" target=\"_blank\"><img className=\"App-logo\" src={factsolotl} alt=\"A pink cartoon axolotl\"/></a>\n  </div>\n    if(this.props.Pb === \"\"){\n      return (\n        <span>\n          {appBody}\n          <header className=\"App-header\">\n            <Search />\n          </header>\n        </span>\n      );\n    } else {\n      return (\n        <span>\n           {appBody}\n          <Results />\n          <header className=\"App-header\">\n            <Search />\n          </header>\n        </span>\n      );\n\n    }\n    \n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Pb: state.resultPb\n  };\n};\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n export const pws = {\n    \"id\": \"1\",\n    \"name\": \"Public Water System\",\n    \"zip\": [\n      \"00000\",\n      \"11111\",\n      \"22222\"\n    ],\n    \"ccr\": {\n      \"analytes\": {\n        \"lead\": {\n          \"range\": \"<0.001 - 0.008\",\n          \"avgConc\": 0.004,\n          \"units\": \"ppb\",\n          \"MCL\": 0.01,\n          \"MCLunits\": \"ppb\",\n          \"MRL\": 0.001,\n          \"MRLunits\": \"ppb\"\n        },\n        \"copper\": {\n          \"range\": \"5.0 - 20.0\",\n          \"avgConc\": 10.0,\n          \"units\": \"ppb\",\n          \"MCL\": 0,\n          \"MCLunits\": \"ppb\",\n          \"MRL\": 0,\n          \"MRLunits\": \"ppb\"\n        }\n      }\n    }\n }\n","import * as actionTypes from \"./actions\";\nimport * as data from \"./temp-data\";\n\nconst initialState = {\n  resultPb: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  const error =\n    \"This zip code didn't match any public water systems in our database.\";\n\n  const resultPb =\n    data.pws.ccr.analytes.lead.avgConc + data.pws.ccr.analytes.lead.units;\n\n  switch (action.type) {\n    \n    case actionTypes.SUBMIT_ZIP:\n      for (let i = 0; i < data.pws.zip.length; i++) {\n        var z = data.pws.zip[i]\n        console.log(i);\n       \n        if (action.zip === z) {\n          return {\n            ...state,\n            resultPb: resultPb\n          };\n        } else {\n          return {\n            ...state,\n            resultPb: error\n          };\n        }\n      }\n        \n      break;\n    default:\n      return state;\n  }\n  return state;\n};\n\nexport default reducer;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\n\nconst store = createStore(reducer);\n\nlet unsubscribe = store.subscribe(() =>\n  console.log(store.getState())\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n    \n    \n\nserviceWorker.unregister();\n"],"sourceRoot":""}