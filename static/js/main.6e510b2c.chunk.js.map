{"version":3,"sources":["components/Logo/Logo.module.css","components/navbar/navbar.module.css","img/bubbleF.png","containers/Search/Search.module.css","components/Preview/Preview.js","containers/List/List.js","components/Details/Details.js","containers/Search/Search.js","components/Logo/Logo.js","components/navbar/navbar.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","preview","props","className","name","exceedance","onClick","clicked","id","List","schools","style","textAlign","error","map","school","key","school_name","district","action_level_exceedance","onSchoolSelect","Details","loadedSchool","result","Search","state","selectedschoolId","query","schoolQuery","queried","this","setState","alert","axios","get","then","response","data","records","length","newSchool","v4","catch","selectedSchoolId","currentSchool","i","newQuery","toggleSchool","classes","toggleCounty","title","schoolDetailsHandler","onSubmit","e","preventDefault","queryHandler","type","placeholder","value","onChange","target","event","onToggleQuery","Component","Nav","href","rel","src","factsolotl","alt","Logo","App","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","interceptors","request","use","Promise","reject","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6e510b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftLogo\":\"Logo_leftLogo__yKmfW\",\"header\":\"Logo_header__1wXHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__3IIWD\"};","module.exports = __webpack_public_path__ + \"static/media/bubbleF.ecb67f7a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleSchool\":\"Search_toggleSchool__3l9Ba\",\"toggleCounty\":\"Search_toggleCounty__3QFZ9\",\"footer\":\"Search_footer__2Eo_C\"};","import React from \"react\";\n\nimport \"./Preview.css\";\n\nconst preview = props => (\n  <div>\n    <div className=\"row\">\n      <div className=\"col s12 m4\">\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <div className=\"details\">\n              <h4>{props.name}</h4>\n              <div className=\"Info\">\n                <p>Exceedance: {props.exceedance}</p>\n                <button\n                  onClick={props.clicked}\n                  id=\"expand\"\n                  className=\"btn btn waves-effect waves-dark white\">\n                  <i id=\"chevron\" className=\"material-icons\">\n                    chevron_right\n                  </i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default preview;\n","import React from \"react\";\nimport Preview from \"../../components/Preview/Preview\";\nimport \"./List.css\";\n\nconst List = props => {\n  let schools = <p style={{ textAlign: \"center\" }}>Something went wrong!</p>;\n  if (!props.error) {\n    schools = props.schools.map(school => {\n      return (\n        <Preview\n          key={school.id}\n          name={school.school_name}\n          district={school.district}\n          exceedance={school.action_level_exceedance}\n          clicked={() => props.onSchoolSelect(school.id)}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className={'list'}>\n      {schools}\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport \"./Details.css\";\n\nconst Details = props => {\n  let school = (\n    <div>\n      <p className=\"FullPost\">Please select a school!</p>\n    </div>\n  );\n  if (props.loadedSchool) {\n    school = (\n      <div>\n        <div className=\"row\">\n          <div className=\"col s12 m4\">\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <div className=\"details\">\n                  <h1>{props.loadedSchool.school_name}</h1>\n                  <p>{props.loadedSchool.district}</p>\n                  <p>{props.loadedSchool.id}</p>\n                  <p>{props.loadedSchool.result}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return school;\n};\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { v4 } from \"uuid\";\nimport List from \"../List/List\";\nimport Details from \"../../components/Details/Details\";\nimport \"./Search.module.css\";\nimport * as classes from \"./Search.module.css\";\n\nclass Search extends Component {\n  state = {\n    schools: [],\n    selectedschoolId: '',\n    error: false,\n    loadedSchool: null,\n    query: '',\n    schoolQuery: true,\n    queried: false\n  };\n\n  queryHandler(query, state) {\n    this.setState({ \n      ...state,\n      query: query });\n      if (this.state.query === ''){\n        alert('Please enter a query.')\n      } else {\n        axios\n        .get(\n          \"https://data.ca.gov/api/3/action/datastore_search?resource_id=5ebb2d68-1186-4937-acaf-8564c9a01ed6&q=\" +\n            this.state.query\n        )\n        .then(response => {\n          const schools = response.data.result.records;\n          if (schools.length === 0) {\n            alert('No schools matched this search')\n          } else {\n            \n          }\n          const newSchool = schools.map(school => {\n            return {\n              ...school,\n              id: v4()\n            };\n          });\n          this.setState({ \n            ...state,\n            schools: newSchool,\n            schoolQuery: true,\n            queried: true\n           });\n        })\n        .catch(error => {\n          this.setState({ error: true });\n        });\n      }\n  }\n\n  schoolDetailsHandler(id, state) {\n    this.setState({ selectedSchoolId: id });\n    let currentSchool = this.state.schools;\n    for (let i = 0; i < currentSchool.length; i++) {\n      if (currentSchool[i].id === id) {\n        this.setState({ \n          ...state,\n          loadedSchool: currentSchool[i],\n         });\n      }\n    }\n  }\n\n  updateQuery(newQuery, state) {\n    this.setState({ \n      ...state,\n      query: newQuery\n     });\n  }\n\n  onToggleQuery(state) {\n      this.setState({\n        ...state,\n        schoolQuery: !this.state.schoolQuery })\n      }\n\n  render() {\n    const toggleSchool = this.state.schoolQuery\n      ? classes.toggleSchool\n      : classes.toggleCounty;\n    const toggleCounty = this.state.schoolQuery\n      ? classes.toggleCounty\n      : classes.toggleSchool;\n    const title = this.state.schoolQuery\n      ? \"Search by school\"\n      : \"Search by county\";\n\n    return (\n      \n      <div>\n           <List\n          error={this.state.error}\n          schools={this.state.schools}\n          selectedSchoolId={this.state.selectedSchoolId}\n          onSchoolSelect={id => this.schoolDetailsHandler(id)}\n          loadedSchool={this.state.loadedSchool}\n        />\n        <Details\n          id={this.state.selectedSchoolId}\n          loadedSchool={this.state.loadedSchool}\n        />\n        <div className=\"footer\">\n          <div className=\"card white\">\n            <div className=\"card-content grey-text\">\n              <span className=\"card-title\">{title}</span>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  this.queryHandler(this.state.query);\n                }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={this.state.query}\n                  onChange={e => this.setState({ query: e.target.value })}/>\n                <div className=\"card-action\">\n                  <div className=\"switch\">\n                    <label>\n                      <span\n                        onClick={(event) => this.onToggleQuery(event)}\n                        className={toggleSchool}>\n                        School\n                      </span>\n                      <span\n                        onClick={(event) => this.onToggleQuery(event)}\n                        className={toggleCounty}>\n                        County\n                      </span>\n                    </label>\n                    <button\n                      id=\"search\"\n                      className=\"btn waves-effect waves-light green\"\n                      type=\"submit\">\n                      <i className=\"large material-icons prefix\">search</i>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport factsolotl from \"../../img/bubbleF.png\";\nimport * as classes from \"./Logo.module.css\";\n\nconst Nav = () => {\n  return (\n      <div className={classes.logo}>\n        <a\n          href=\"https://www.scientificamerican.com/article/biologys-beloved-amphibian-the-axolotl-is-racing-toward-extinction1/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\">\n          <img\n            className={classes.leftLogo}\n            src={factsolotl}\n            alt=\"A pink cartoon axolotl\"/>\n        </a>\n      </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport * as classes from \"./navbar.module.css\";\nimport Logo from '../Logo/Logo';\n\nconst Nav = () => {\n  return (\n    <div className={classes.nav}>\n     <Logo/>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Search from './containers/Search/Search';\nimport Nav from './components/navbar/navbar';\nimport './App.css';\n\nclass App extends React.Component {\n  \n  render() {\n    if(!this.props.queried){\n      return (\n        <div className=\"App\">\n          <div className=\"sliding-background\"></div>\n          <Nav/>\n          <div className='footer'>\n          <Search />\n          </div>\n        </div>\n      );\n    } else if (this.props.queried && this.props.schoolQuery) {\n      return (\n        <div className=\"App\">\n          <div className=\"sliding-background\"></div>\n          <Nav/>\n          {/* <ViewControl /> */}\n          <div className='footer'>\n          <Search />\n          </div>\n        </div>\n      );\n    }  \n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\n\naxios.interceptors.request.use(request => {\n  console.log(request);\n  return request;\n}, error => {\n  console.log(error)\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n  console.log(response);\n  return response;\n}, error => {\n  console.log(error)\n  return Promise.reject(error);\n});\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}